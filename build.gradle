plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.71'
    id 'com.github.johnrengelman.shadow' version '5.1.0'
}

allprojects {
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'java'

    group = 'me.mattstudios'
    version = '1.0'

    repositories {
        mavenCentral()
        mavenLocal()

        maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
        maven { url = 'https://oss.sonatype.org/content/groups/public/' }
        maven { url = 'https://jitpack.io' }

    }

    dependencies {

        // Spigot
        compileOnly "org.spigotmc:spigot-api:1.15.2-R0.1-SNAPSHOT"
        compileOnly "org.spigotmc:spigot:1.15.2-R0.1-SNAPSHOT"

        // My stuff
        implementation "me.mattstudios.utils:matt-framework:1.3"
        //implementation "me.mattstudios.utils:matt-framework-gui:1.2.1"
        implementation "me.mattstudios.utils:matt-core:1.1.12"

        // Config repository
        implementation("com.github.ipsk:ConfigMe:8ccab345e9") {
            exclude group: "org.yaml", module: "snakeyaml"
        }

        //implementation "me.rayzr522:jsonmessage:1.2.0"

        // Kotlin
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    }

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    compileJava {
        options.compilerArgs += ["-parameters"]
        options.fork = true
        options.forkOptions.executable = 'javac'
        options.encoding = 'UTF-8'
    }

    compileKotlin {
        kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
        kotlinOptions.javaParameters = true
    }

}

apply plugin: 'com.github.johnrengelman.shadow'

shadowJar {
    //minimize()

    relocate("me.mattstudios.mf", "me.mattstudios.triumphpets.mf")
    relocate("me.mattstudios.mattcore", "me.mattstudios.triumphpets.core")
    relocate("ch.jalu.configme", "me.mattstudios.triumphpets.configme")

    archiveFileName = "unamed-moon-${project.version}.jar"

    // Testing only
    destinationDir file("T:/servers/spigot-1.15/plugins");
}

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
}